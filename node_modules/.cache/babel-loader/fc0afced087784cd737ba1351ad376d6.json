{"ast":null,"code":"var _jsxFileName = \"/Users/youssefahmed/nd0191-c1-myreads/starter/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport BookList from \"./BookList\";\nimport SearchBook from \"./SearchBook\";\nimport { Routes, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BooksApp extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      myBooks: [],\n      error: \"You have no books in this shelf\",\n      fetchingError: undefined,\n      isFetchingBooks: true\n    };\n\n    this.fetchMyBooks = () => {\n      this.setState({\n        isFetchingBooks: true\n      });\n      BooksAPI.getAll().then(books => {\n        if (!books.length) {\n          this.setState({\n            fetchingError: undefined,\n            isFetchingBooks: false\n          });\n        } else {\n          this.setState({\n            myBooks: books,\n            fetchingError: undefined,\n            isFetchingBooks: false\n          });\n        }\n      }).catch(err => {\n        this.setState({\n          fetchingError: \"There was an error loading your books, please check your connection\",\n          isFetchingBooks: false\n        });\n      });\n    };\n\n    this.changeBookShelf = (book, shelf) => {\n      book.shelf = shelf;\n      this.setState(prevState => ({\n        myBooks: prevState.myBooks.filter(b => b.id !== book.id).concat([book])\n      }));\n      BooksAPI.update(book, shelf);\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMyBooks();\n  }\n\n  render() {\n    const {\n      myBooks,\n      error,\n      fetchingError,\n      isFetchingBooks\n    } = this.state;\n    const {\n      changeBookShelf,\n      fetchMyBooks\n    } = this;\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(BookList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/search\",\n            render: () => /*#__PURE__*/_jsxDEV(SearchBook, {\n              myBooks: myBooks,\n              changeBookShelf: changeBookShelf\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BooksApp;","map":{"version":3,"names":["React","BookList","SearchBook","Routes","Route","BrowserRouter","Router","BooksAPI","BooksApp","Component","state","myBooks","error","fetchingError","undefined","isFetchingBooks","fetchMyBooks","setState","getAll","then","books","length","catch","err","changeBookShelf","book","shelf","prevState","filter","b","id","concat","update","componentDidMount","render"],"sources":["/Users/youssefahmed/nd0191-c1-myreads/starter/src/App.js"],"sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport BookList from \"./BookList\";\nimport SearchBook from \"./SearchBook\";\nimport {  Routes, Route,   BrowserRouter as Router, } from \"react-router-dom\";\nimport * as BooksAPI from \"./BooksAPI\";\n\n\nclass BooksApp extends React.Component {\n  state = {\n    myBooks: [],\n    error: \"You have no books in this shelf\",\n    fetchingError: undefined,\n    isFetchingBooks: true\n  };\n  componentDidMount() {\n    this.fetchMyBooks();\n  }\n\n  fetchMyBooks = () => {\n    this.setState({\n      isFetchingBooks: true\n    });\n    BooksAPI.getAll()\n      .then(books => {\n        if (!books.length) {\n          this.setState({\n            fetchingError: undefined,\n            isFetchingBooks: false\n          });\n        } else {\n          this.setState({\n            myBooks: books,\n            fetchingError: undefined,\n            isFetchingBooks: false\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({\n          fetchingError:\n            \"There was an error loading your books, please check your connection\",\n          isFetchingBooks: false\n        });\n      });\n  };\n  changeBookShelf = (book, shelf) => {\n    book.shelf = shelf;\n    this.setState(prevState => ({\n      myBooks: prevState.myBooks.filter(b => b.id !== book.id).concat([book])\n    }));\n    BooksAPI.update(book, shelf);\n  };\n  render() {\n    const { myBooks, error, fetchingError, isFetchingBooks } = this.state;\n    const { changeBookShelf, fetchMyBooks } = this;\n    return (\n      <Router>\n      <div className=\"app\">\n        <Routes>\n          <Route\n            exact\n            path=\"/\" element={<BookList/>}\n\n\n          />\n          <Route\n            path=\"/search\"\n            render={() => (\n              <SearchBook\n                myBooks={myBooks}\n                changeBookShelf={changeBookShelf}\n              />\n            )}\n          />\n        </Routes>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default BooksApp;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAUC,MAAV,EAAkBC,KAAlB,EAA2BC,aAAa,IAAIC,MAA5C,QAA2D,kBAA3D;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;;AAGA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;EAAA;IAAA;IAAA,KACrCC,KADqC,GAC7B;MACNC,OAAO,EAAE,EADH;MAENC,KAAK,EAAE,iCAFD;MAGNC,aAAa,EAAEC,SAHT;MAINC,eAAe,EAAE;IAJX,CAD6B;;IAAA,KAWrCC,YAXqC,GAWtB,MAAM;MACnB,KAAKC,QAAL,CAAc;QACZF,eAAe,EAAE;MADL,CAAd;MAGAR,QAAQ,CAACW,MAAT,GACGC,IADH,CACQC,KAAK,IAAI;QACb,IAAI,CAACA,KAAK,CAACC,MAAX,EAAmB;UACjB,KAAKJ,QAAL,CAAc;YACZJ,aAAa,EAAEC,SADH;YAEZC,eAAe,EAAE;UAFL,CAAd;QAID,CALD,MAKO;UACL,KAAKE,QAAL,CAAc;YACZN,OAAO,EAAES,KADG;YAEZP,aAAa,EAAEC,SAFH;YAGZC,eAAe,EAAE;UAHL,CAAd;QAKD;MACF,CAdH,EAeGO,KAfH,CAeSC,GAAG,IAAI;QACZ,KAAKN,QAAL,CAAc;UACZJ,aAAa,EACX,qEAFU;UAGZE,eAAe,EAAE;QAHL,CAAd;MAKD,CArBH;IAsBD,CArCoC;;IAAA,KAsCrCS,eAtCqC,GAsCnB,CAACC,IAAD,EAAOC,KAAP,KAAiB;MACjCD,IAAI,CAACC,KAAL,GAAaA,KAAb;MACA,KAAKT,QAAL,CAAcU,SAAS,KAAK;QAC1BhB,OAAO,EAAEgB,SAAS,CAAChB,OAAV,CAAkBiB,MAAlB,CAAyBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,IAAI,CAACK,EAA5C,EAAgDC,MAAhD,CAAuD,CAACN,IAAD,CAAvD;MADiB,CAAL,CAAvB;MAGAlB,QAAQ,CAACyB,MAAT,CAAgBP,IAAhB,EAAsBC,KAAtB;IACD,CA5CoC;EAAA;;EAOrCO,iBAAiB,GAAG;IAClB,KAAKjB,YAAL;EACD;;EAoCDkB,MAAM,GAAG;IACP,MAAM;MAAEvB,OAAF;MAAWC,KAAX;MAAkBC,aAAlB;MAAiCE;IAAjC,IAAqD,KAAKL,KAAhE;IACA,MAAM;MAAEc,eAAF;MAAmBR;IAAnB,IAAoC,IAA1C;IACA,oBACE,QAAC,MAAD;MAAA,uBACA;QAAK,SAAS,EAAC,KAAf;QAAA,uBACE,QAAC,MAAD;UAAA,wBACE,QAAC,KAAD;YACE,KAAK,MADP;YAEE,IAAI,EAAC,GAFP;YAEW,OAAO,eAAE,QAAC,QAAD;cAAA;cAAA;cAAA;YAAA;UAFpB;YAAA;YAAA;YAAA;UAAA,QADF,eAOE,QAAC,KAAD;YACE,IAAI,EAAC,SADP;YAEE,MAAM,EAAE,mBACN,QAAC,UAAD;cACE,OAAO,EAAEL,OADX;cAEE,eAAe,EAAEa;YAFnB;cAAA;cAAA;cAAA;YAAA;UAHJ;YAAA;YAAA;YAAA;UAAA,QAPF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QADF;EAuBD;;AAvEoC;;AA0EvC,eAAehB,QAAf"},"metadata":{},"sourceType":"module"}